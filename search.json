[{"title":"240621_LOG","url":"/2024/06/21/240621_LOG/","content":"\n      \n        863d71c4382286e390e2954505d140f7063612d1f353d3b911ff1661a0fe9a2932733f62715f5a9f49b767dad37fe68d9899b1705bb630429d723616aa34c1e24b707b1057a51cac0a269853c73d4997d8cd59e3548c82585beb1a49abd22d2bcc540723826a6659dfb2738244b0fe53cbadf7e2bbdb564ce861ab289f927188cb35e9b94548043a8cae42eaf29d5b5f467d7b0909dbeab28a17294e16651077cfa82790307e2f256e8de28194f260da1735ae7f038eb044351c08526b40ad9a1336dfaa5948a3d4b8f1bfeb1c519650e5fc8557520af9c72fe279d2d5a452116752789aa9b00c3ebe6c9273d441d44a478d52fac33cb2db6332fa265530ca66e46a0d4f5975a06ba8147a0ef7a9af1c4b74a1f5eb8e2511cfd937b5d089204ac22f38489500ccfbd33dd0384b413ff5ff7312af447d4ea87faedd7b1921bd736e301a9dbc9e3a9ac8722f4afe5c21ae60289518963ab4c145dd18982fae909daee05ec53b680040c8d6f830ee5dbafd688ee37bdc29fc34c76e1a695caaf5724a4c9f12c80ec5d8fe1b2adcebef5b27dbbe3fe0299197910fe970196a5ea1a7b068196e8f7c43658e997158a809b31eef9029543f8873aeadb63367fefbdf4a35b4c3c1370da9949ea3c497b480ee0945dbf5099cf894b2f6e09d36ef78fa97175be78596a6ea5d3ff68398c09d86fe0201cf0fd806d0a5e26d2dd2cf560bb1c584c8ba5580c8796176e519ba45fd3a841f15819e7414c734dd3f76d48240289338956adc8257c0e31158112c39673c6094a1baecc03fd9e80d84830f06e7d3e0f3439478bac4f10708a0dfa052afdcc949cfbe7d606115bfb4ae8eb9b379eee1f1150eea79af9e92bcebf1283aa1648a6ad48fc8fa0eb8c585c4e70d32fbfbc5c242412c2b7f4504c74cc03f0976f81e9a033a7623b34e9552a729bda3a896d830830a9629077dcd5a9c03b08fe5e1800a3f284cdebf90ff0b0229362c5b8247868ad07878af01f3b98fecfee1fbb6e0b209f529db58276e1a412c4a520a495fdc4bfca429d6d5232f2db9e588d552940c1db96aba08ce90b178bcc9a26edf5af32c8b2d3ae55b75fe812b0a31ec93477143e94e222dc0878977ca6fc9a222c9a0064cdc4011536fbb6d330ff7ca9764282e7960bc74eb788c4a532a09b31cd20fb27b7968e424cacf82eae17259cf2ffb9b638b8ea56ce6f47ef9b3b164bb68db85e968fa65236467fa2b715fabe6ab17acb30551f618f340d422ac1be676e69ccae73e7d4506e2350976d0913f5dd15e4d437f4d43511c3b27ccbb52313d4deb18ea779483349c4ee7094fd90d51272da96cd2d96868e47bd8ea56e0c61abedb25c99756c90ae98d8cce58f47389273c412eb07b41e1af3c6a395136eda173ea16a3600bbc40d4aa32d70a0a19fb27d32c1cc5c108430141c3468a23b313163d5de7cf27f527f397a728f658babdebf4319204abd28765e077d83286f93b9037d14dac19388890e4a31af9f7ffec6c0c81a59d7df91e163d8453d4f1c91db7e12befd92b1a2b42051201bf2b758280ccc00cd64c3ae04d8566c79de7cb44ddb29b521bb13243fcf0a2e8ac02e6d1650499e68cf6c7e56128c192707efd3d1e6a0e6c8e5929409ade55e9f32a344097a8c83a3ab3e3ada09918fe022cf7a5ec9e3724ced506267cb619244c107cd1cb778718527712e9336e18c82c7e02a48479d95e1bee03b38e7664ef690da12ef1d9e1b4f7024c24b778b180801882282ae80a74a45ca60772a4b7764010df912eedae5f45470b130ed7cae3000ef3de20ab675b87f3723526661db450ec6fb6eae8d2c3ab65b84354678c4038ddaa4db1f547ca9855fc9fc3263e19e17f3d4132498786308a6af62900f53d6376b169a2b4b403987f8c974182dad6b9561cd236cbfe7cb69a4b167d28e7e13638230f38008105460fac33ec406f58d7be58fe08d232fb40a83b39c17adc8ac1af8c669ccbac4a4d192e54c5d9c50a4260d746f286625549649bf81e9985899eb25f0236a4c1e1747f0d78dc9d109525620235fdba0d1f75777ebfe1d455663ff5c63372e3b2af01a7dae3f5cc9227116d3a5dfe020a949562425239ad0eb97908345d834f0c7eb559781adaa89aa1764937ec61f24b5b73421604cd5bf7536dc51f51f8f909a9ebeba47f8274ed51230ab949a7b377e223c0251c753c50106657bb3fda85544254a821ae208fde36d307f4fd951fc69e12f42c257fb4fa1787d51fb244e1f179ef8f862655700e644f76a9aa13f5c571c21b725a6341ac3d2453e3ac349735e94184ce7834941eb06d7bc2273e5d7dc77facf48cc22f3fef2f46f71ee52b6bb285d7568c2ca12e3d2f76661ae45679813cdb8bb2a5ea839e1505a7e0f81dd1bebf1ba6f5b8362ea4c28b9263d28362165df9d61f5a471aa2a5fd1548a641373061bc425b88e2dd5e98931c92d4e2537397ec5d745c93be8f6ed0698373e7779f75f847697eac85b26266ff98afda662c2df20d0a2d4840af9eb83e6593762f60079532962c521fea1ac8dea106ce218671c719688ea4a3ad8219c2b49049f4b960e7d18e74093a76f741e907a39431b7ddc56986bb48f5631f9b2ae456c47c99a0eb2cba84b747c2b324f6ee3006ed8c0f22f85f3e0712078797d4c39f2af874ebe495b890ded6787a54d1d61165a432540be4854af179df7dc4b329bc496f259e55f6956aa2cac0ee3bfd609f7736080c389c8680752c3ed34232eddccfbdc83e8bafbda5b37f87bab88d2cff79132fd90df45cdfe921fa9277cba310ed2ffab021b60347841fdb8b4a9a2d2272cdb5f12b999e0cf1d076a4848e0c120fb34d0f23d8c56e5f7754e70ed2d61eba4450082094f9a22dbd2dcf0a5b3572ce64ba6fb8d0d94afcb05ab56ebd3fdc7f802aff286b6fdaef6e9385ab8833225f02b28906249e7be5c0a1e42d73addfba1c0d05510e0e30ed5ade2b9b4cb8f8d4b2fda2f56d3aebaf44caeba10036cc7dc5b966d938e91e95794a57367130905d9260fc46bcc93365f726044fb1dd6bcdd82fbc21687d85570afd20c076da0b21da54deb4c69db695cf458f8c1d2df091615b1a020fd03ac4cb01a196104b47f41e9612f666d74984400ef1ac974a8277bb806c1eff816c50a047ad49e573524623bc19174a54482103be489e002207b93c99e33afe6c838ad325071c16809c837d0a8b310c68772c86c15dd720ee10de3e47a2653685934fc16b622150dceaf57af239093a30518eb6eab3b5c99056d0ebd6dd20378e1fe7e9eb965097789a4010b4ebbe86bbce2fd95e6ec7813613d1965b96d55980f6ba5264ad5e9c3af7dc7dfccf30a214a6eca0ce5fde7c1cd2eda941fe97f6f407b309c56dcf4fef01c6e1c98df0929786a25445687c5b74d4e0de00fd8605e4c8a5fd33969ea1226fba6a9c526fe7897756906830013ec05700199a13c3ddd77f8b308f09c3858ae48682cdb8f5f738b1e6ff9db3e8310a41414b80a1b2c2a7bb770c35799a2a0ce8c402b8a185ec59e28845d6aaae12ad13104de127f0ff19a9309b5f571c6da8d6603f952d3b79dbdcbd6c33b97b7626fe05150c9b7c5584bd80c39baa1eeaea6f6fb09a407451c68d4d23358f41a39c4c7711c135e85356555694d059971eff67f3cfabcabf99bb7cb0df8cd6326642e8a45fe6ae57e64b4f7a3e692de9f5ec807410104330c6dd75280c38784e9e524fa8d887c2bf9760430f67f47349101dfe7922bb712a7cc291f0ff4858fbab6d5fcfc350d385bfb0a659737a50bd5a97b6273e601ce42915c0010ac342bfc297c92c49485cf88b02536b6ebbe8f9b4452f4b34da539a52e2b7ef7a01795ac5b179db7bf5aff36f7ce55717fa2acb4a7e9d1cf121e7982ab64ac21c4c17d807dff8f1b17437d6a214e52643ddd94cc4de05a7c4cff8eb45d3720749c8630c3e2f8b2db8a7a0deffc6d20b40c5b9d433ef1bcaeb0795bf31db925b2b10f0630a10b7504da226c20798c4e7139c47a35d3a6b96afbe2f48290366ecd5c8cf6b9f76ce79208b312a29a8b9fe70a5ad4b44cbaebebb5810b28be0617fa0862dbc6600\n      \n      \n        \n          \n          \n            PASSWORD\n          \n        \n        \n      \n    \n    ","categories":["Research","B_N__SGDD"],"tags":["technical_report"]},{"title":"BdNMC Code review_test_post","url":"/2024/07/13/BdNMC%20Code%20review_pasta/","content":"\nmain.cppLine 57-63, time_delay_fractiondouble t_delay_fraction(double tcut, double pos, double speed) &#123;      double tdelay = pos / speed / speed_of_light - pos / speed_of_light;      if (tdelay &gt; tcut)          return 1;      else          return 1 - (tcut - tdelay) / tcut;  &#125;\nLine 65-166, parameter card error check and read the pre-simulation setting.Line 65-124, parameter card error check.Line 127-130, Random seed initif (par-&gt;Seed() &gt;= 0)      Random(par-&gt;Seed());  else      Random();\n\nrandom seed 가 제공되면 그걸로 initialize,\n없는 경우는 그냥 랜덤하게 하나 지정\n\nLine 134, [[1609.01770.pdf#page=22&amp;selection=55,0,55,10|Timing cut]]\ntime delay 와 관련된 부분\n\nLine 136-166, parameter card readLine 136-143, output &amp; summary file location and nameLine 146-151, signal channel, signal particleLine 153-164, output mode definestring outmode;  std::unique_ptr &lt;std::ofstream&gt; comprehensive_out;//if((outmode=par-&gt;Output_Mode())==&quot;summary&quot;)  if ((outmode = par-&gt;Output_Mode()) == &quot;comprehensive&quot; || outmode == &quot;dm_detector_distribution&quot;) &#123;      comprehensive_out = std::unique_ptr&lt;std::ofstream&gt;(new std::ofstream(output_filename));      if (!comprehensive_out-&gt;is_open()) &#123;          cout &lt;&lt; &quot;Unable to open output file: &quot; &lt;&lt; output_filename &lt;&lt; endl;          parstream.close();          return -1;      &#125;&#125;\nLine 168-275, Run parameter, Detector setup, Production mode\n여기까진 pMax  가 나오지 않았다.\n\n","categories":["B_N__SGDD"]},{"title":"Blog_init","url":"/2024/06/21/Blog-init/","content":"RHINE-LAB-KR\n","categories":["Announcement"]},{"title":"Ubutnu 24.04 에 GENIE 설치하기 (24 년 09 월 기준)","url":"/2025/06/03/GENIE%20install%20instruction/","content":"\n본 글에선 중성미자 입자 생성 시뮬레이션 프로그램 GENIE 의 설치 과정에 대해 기술한다. 맨 하단에 이 과정을 전부 실행하는 스크립트가 있으니 급하면 해당 스크립트를 사용하라.\n의존성 패키지를 많이 끌고오는 프로그램이므로 Ubuntu, GENIE, 의존성 패키지 셋의 버전에 따라서 해당 방법으로 설치가 되지 않을 수도 있다.\n사용된 ubuntu, GENIE, 의존성 패키지들의 버전은 다음과 같다.\nubuntu : 24.04 or 22.04\nGENIE : R-3_04_02\nlibxml2 : 위에 기술한 ubuntu 의 apt 에서 설치\nLHAPDF : 6.5.4\nlog4cpp : 1.1.5rc1\npythia : 6.4.16, 6.4.28, 8 버전을 셋 다 사용. 이유는 2.4. 에서 후술한다.\nGSL : 2.8\nROOT : 6.30.08\n\n\n\n2024/09/11/ docker container ubuntu 24.04 를 베이스로 한다.2024/09/12/ docker container ubuntu 22.04 에서 동작 확인\n\n가능하면 make install 단계에서는 -j 옵션을 사용하지 마라\n\nPrerequisite apt installapt 에서 설치해야 하는 항목\n필수 설치\nbinutils\ncmake\ngcc\ngfortran\ngit\ng++\nlibgif-dev\nlibgsl-dev\nlibnsl-dev\nlibssl-dev\nlibtbb-dev\nlibx11-dev\nlibxext-dev\nlibxft-dev\nlibxml2-dev\nlibxpm-dev\nlocales\npython3\nrsync\nwget\nxorg\n\nIntegrated commandapt 설치apt update &amp;&amp; \\apt install -y binutils cmake gcc gfortran git g++ libgif-dev libgsl-dev libnsl-dev libssl-dev libtbb-dev libx11-dev libxext-dev libxft-dev libxml2-dev libxpm-dev locales make python3 rsync wget xorg\n로케일 설정locale-gen en_US.UTF-8\nDependency 설치LIBXML2apt 에서 설치됨. Section 1.1., 1.2. 참조\nLHAPDF - Version 6.5.4내려받기 및 압축 해제cd /rootmkdir /root/lhapdfwget https://lhapdf.hepforge.org/downloads/LHAPDF-6.5.4.tar.gztar xvf LHAPDF-6.5.4.tar.gzcd /root/LHAPDF-6.5.4\n빌드 및 정리\npython 을 disable 하고 받아야 문제가 없다.\n\n./configure \\\t--prefix=/root/lhapdf \\\t--disable-pythonmake -j N # N 은 장비의 스레드 개수make installcd /rootrm -rf LHAPDF*\nLHAPDF integrated commandcd /root &amp;&amp; \\mkdir /root/lhapdf &amp;&amp; \\wget https://lhapdf.hepforge.org/downloads/LHAPDF-6.5.4.tar.gz &amp;&amp; \\tar xvf LHAPDF-6.5.4.tar.gz &amp;&amp; \\cd /root/LHAPDF-6.5.4 &amp;&amp; \\./configure \\\t--prefix=/root/lhapdf \\\t--disable-python &amp;&amp; \\make -j 100 &amp;&amp; \\ # N = 100 인 경우make install &amp;&amp; \\cd /root &amp;&amp; \\rm -rf LHAPDF*\nlog4cpp - Version 1.1.5rc1내려받기 및 압축 해제mkdir /root/log4cppmkdir /root/log4cpp_srccd /rootwget &#x27;https://sourceforge.net/projects/log4cpp/files/log4cpp-1.1.x (new)/log4cpp-1.1/log4cpp-1.1.5rc1.tar.gz&#x27;tar -xvf log4cpp-1.1.5rc1.tar.gz -C /root/log4cpp_src --strip-components=2\n빌드 및 정리cd log4cpp_src./configure --prefix=/root/log4cppmake -j N # N 은 장비의 스레드 개수make installcd /rootrm -rf log4cpp_* log4cpp-*\nlog4cpp integrated commandmkdir /root/log4cpp &amp;&amp; \\mkdir /root/log4cpp_src &amp;&amp; \\cd /root &amp;&amp; \\wget &#x27;https://sourceforge.net/projects/log4cpp/files/log4cpp-1.1.x (new)/log4cpp-1.1/log4cpp-1.1.5rc1.tar.gz&#x27; &amp;&amp; \\tar -xvf log4cpp-1.1.5rc1.tar.gz -C /root/log4cpp_src --strip-components=2 &amp;&amp; \\cd log4cpp_src &amp;&amp; \\./configure --prefix=/root/log4cpp &amp;&amp; \\make -j 100 &amp;&amp; \\make install &amp;&amp; \\cd /root &amp;&amp; \\rm -rf log4cpp_* log4cpp-*\nPYTHIA6 - Version 6.4.28내려받기 및 압축해제 및 전처리Pythia6 의 경우, 빌드 시 dependency 가 되는 것을 담아놓은 pythia6 폴더와, 각 minor version  에 따른 실제 골자가 되는 .f 파일이 따로 배포된다.본 글에서 사용하는 pythia6 폴더에는 기본적으로 6.4.16 의 .f 파일이 들어가 있는데, 이를 pythia6 의 최종 패치 버전인 6.4.28 의 .f 파일을 사용할 것이다. Root 만 설치할 경우, Pythia6 은 필요하지 않고 심지어는 현행 Root 버전에선 removal 되어 사용하지 않는 것이 옳다.하지만 GENIE 의 최신 버전에서는 Pythia6 의 라이브러리 경로와 Pythia6 을 베이스로 빌드한 Root 에서 생성된 파일을 dependency 로 사용하고 있기 때문에 GENIE 의 설치에는 Pythia6 의 올바른 설치가 상당히 중요하다. \n# pythia6 다운로드 및 압축 해제wget https://root.cern.ch/download/pythia6.tar.gztar zxvf pythia6.tar.gz# pythia 6.4.28 의 fortran 코드 다운로드 및 6.4.16 의 fortran 코드 대체wget https://www.pythia.org/download/pythia6/pythia6428.fmv pythia6428.f pythia6/pythia6428.frm pythia6/pythia6416.fcd /root/pythia6\n이 상태에서 빌드하면 몇 개의 변수가 빌드 과정에서 다른 값으로 중복 정의되는 문제가 있다.이는 fortran 으로 작성된 코드를 c 로 변환하는 과정에서 생기는 문제로 보인다.실제로 Pythia6 의 매뉴얼에서는 이를 피하기 위해 external 처리해야하는 변수의 종류를 소개하고 있다.\npythia6_common_address.c 파일을 열어52-60, 62, 64 - 65, 69, 72 번째 줄의 맨 앞에 extern 이라는 조건을 추가해야 한다.다음의 명령어를 사용하면 된다.\nsed -i &#x27;52,60s/^/extern /;62s/^/extern /;64,65s/^/extern /;69s/^/extern /;72s/^/extern /&#x27; /root/pythia6/pythia6_common_address.c\n검토해보고 싶다면 파일을 들어갔을 때 다음과 같이 수정되어있으면 된다.\n\n빌드 및 정리./makePythia6.linuxx8664 -j N  # N 은 장비의 스레드 개수# 정리 단계cd /rootrm pythia6.tar.gz\nPYTHIA6 integrated commandwget https://root.cern.ch/download/pythia6.tar.gz &amp;&amp; \\tar zxvf pythia6.tar.gz &amp;&amp; \\wget https://www.pythia.org/download/pythia6/pythia6428.f &amp;&amp; \\mv pythia6428.f pythia6/pythia6428.f &amp;&amp; \\rm pythia6/pythia6416.f &amp;&amp; \\cd /root/pythia6 &amp;&amp; \\sed -i &#x27;52,60s/^/extern /;62s/^/extern /;64,65s/^/extern /;69s/^/extern /;72s/^/extern /&#x27; /root/pythia6/pythia6_common_address.c &amp;&amp; \\./makePythia6.linuxx8664 -j 100 &amp;&amp; \\cd /root &amp;&amp; \\rm pythia6.tar.gz\nPYTHIA8 - Version 8.3.12 (option for root)Pythia8 은 root 에만 들어가는 옵션이고, GENIE 에서도 Pythia8 을 옵션으로 달 수 있지만 현재는 에러를 해결하지 못해서 GENIE 에서 enable 옵션은 사용하지 않았다.\n내려받기 및 압축해제wget https://www.pythia.org/download/pythia83/pythia8312.tgzmkdir /root/pythia8tar xvf pythia8312.tgzcd /root/pythia8312\n빌드 및 정리./configure --prefix=/root/pythia8make -j N # N 은 장비의 스레드 개수make installcd /rootrm -rf pythia8312*\nPYTHIA8 integrated commandwget https://www.pythia.org/download/pythia83/pythia8312.tgz &amp;&amp; \\mkdir /root/pythia8 &amp;&amp; \\tar xvf pythia8312.tgz &amp;&amp; \\cd /root/pythia8312 &amp;&amp; \\./configure --prefix=/root/pythia8 &amp;&amp; \\make -j 100 &amp;&amp; \\make install &amp;&amp; \\cd /root &amp;&amp; \\rm -rf pythia8312*\nGSL - Version 2.8내려받기 및 압축 해제mkdir /root/gslwget https://mirror.ibcp.fr/pub/gnu/gsl/gsl-latest.tar.gztar xvf gsl-latest.tar.gzcd /root/gsl-2.8\n빌드 및 정리./configure --prefix=/root/gslmake -j N # N 은 장비의 스레드 수make installcd /rootrm -rf gsl-2.8 gsl-latest.tar.gz\nGSL integrated commandmkdir /root/gsl &amp;&amp; \\wget https://mirror.ibcp.fr/pub/gnu/gsl/gsl-latest.tar.gz &amp;&amp; \\tar xvf gsl-latest.tar.gz &amp;&amp; \\cd /root/gsl-2.8 &amp;&amp; \\./configure --prefix=/root/gsl &amp;&amp; \\make -j 100 &amp;&amp; \\make install &amp;&amp; \\cd /root &amp;&amp; \\rm -rf gsl-2.8 gsl-latest.tar.gz\nROOT - Version 6.30.08GENIE 는 pythia6 의존성이 필요한데, 특히 root 에서 EGPythia6 를 불러오는데 이를 ROOT 최신버전에선 지원하지 아니함.ROOT 에서 PYTHIA6 가 deprecate 되는 시점이 6.30, 완전히 removal 되는 시점이 6.32 이다.따라서 2024/09/11 기준 PYTHIA6 를 지원하며 가장 최근까지 패치가 진행되었던 ROOT 6.30.08 버전을 사용한다.\n내려받기, 압축 해제 및 디렉토리 준비cd /rootmkdir root_build &amp;&amp; mkdir root_install # root 는 반드시 빌드 위치가 src 파일 위치와는 달라야 함.git clone https://github.com/root-project/root.git root_srccd root_srcgit checkout v6-30-08cd /root/root_build\n빌드 및 정리cmake \\\t-DCMAKE_INSTALL_PREFIX=/root/root_install \\ # 설치 위치\t-DPYTHIA6_LIBRARY=/root/pythia6/libPythia6.so \\ # pythia6 라이브러리 위치 (필수사항)\t-DPYTHIA8_INCLUDE_DIR=/root/pythia8/include \\ # pythia8 헤더파일 위치 (선택사항1)\t-DPYTHIA8_LIBRARY=/root/pythia8/lib/libpythia8.so \\ # pythia8 라이브러리 위치 (선택사항1)\t-DGSL_DIR=/usr/local \\ # GSL 위치\t-Dbuiltin_xrootd=ON \\ # 빌트인 x11 기반 root\t-Droofit=ON \\ # roofit\t-Dpythia6=ON \\\t-Dpythia8=ON \\\t-Dmathmore=ON \\\t-Dpython=OFF \\ # pythia8 ON (선택사항1), pythia6 ON (필수사항), mathmore ON (필수사항:GENIE 가 요구함)\t../root_srccmake --build . --target install -- -j N # N 은 장비의 스레드 수cd /root/root_install/binsource thisroot.shcd /root\nROOT Integrated commandcd /root &amp;&amp; \\mkdir root_build &amp;&amp; \\mkdir root_install &amp;&amp; \\git clone https://github.com/root-project/root.git root_src &amp;&amp; \\cd /root/root_src &amp;&amp; \\git checkout v6-30-08 &amp;&amp; \\cd /root/root_build &amp;&amp; \\cmake \\\t-DCMAKE_INSTALL_PREFIX=/root/root_install \\\t-DPYTHIA6_LIBRARY=/root/pythia6/libPythia6.so \\\t-DPYTHIA8_INCLUDE_DIR=/root/pythia8/include \\\t-DPYTHIA8_LIBRARY=/root/pythia8/lib/libpythia8.so \\\t-DGSL_DIR=/usr/local \\\t-Dbuiltin_xrootd=ON \\\t-Droofit=ON \\\t-Dpythia6=ON \\\t-Dpythia8=ON \\\t-Dmathmore=ON \\\t-Dpython=OFF \\\t../root_src &amp;&amp; \\cmake --build . --target install -- -j 100 &amp;&amp; \\cd /root/root_install/bin &amp;&amp; \\source thisroot.sh &amp;&amp; \\cd /root\nGENIE - Version 3.04.021 과 2 에서 GENIE 설치에 요구되는 요구사항을 전부 설치하였으며이 단계에서는 본인의 연구에 필요한 최소한의 요소로 변수를 제거하고 설치하였음을 미리 밝히는 바이다.앞서 설치한 요구사항을 GENIE 에서 제대로 인식하기 위해서 환경변수를 설정해 주어야 하는데상기 단계를 그대로 따라왔다면 3.1. 의 echo 로 시작하는 명령줄이 이를 자동으로 진행해 줄 것이다.\n내려받기, 압축 해제 환경 변수 설정mkdir /root/GENIEgit clone https://github.com/GENIE-MC/Generator.git GENIE_Generatorcd /root/GENIE_Generatorgit checkout R-3_04_02echo -e &#x27;export GENIE=/root/GENIE_Generator\\nexport ROOTSYS=/root/root_install\\nexport LOG4CPP=/root/log4cpp\\nexport LHAPATH=/root/lhapdf\\nexport PYTHIA6=/root/pythia6\\nexport PATH=/lib:$PATH:$ROOTSYS/bin:$GENIE/bin\\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$LOG4CPP/lib:/lib:/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:$LHAPATH/lib:$PYTHIA6:$ROOTSYS/lib:$GENIE/lib&#x27; &gt;&gt; /root/.zshrcsource /root/.zshrc\n빌드 및 정리./configure \\\t--prefix=/root/GENIE \\ # GENIE 의 설치 경로\t--with-lhapdf6-inc=/root/lhapdf/include \\ # lhapdf 헤더 경로\t--with-lhapdf6-lib=/root/lhapdf/lib \\ # lhapdf 라이브러리 경로\t--with-libxml2-inc=/usr/include/libxml2 \\ # libxml2  헤더 경로 : apt 외의 수단으로 설치할 경우 달라질 수 있음\t--with-libxml2-lib=/lib/x86_64-linux-gnu \\ # libxml2 라이브러리 경로 : apt 외의 수단으로 설치할 경우 달라질 수 있음\t--with-log4cpp-inc=/root/log4cpp/include \\ # log4cpp 헤더 경로\t--with-log4cpp-lib=/root/log4cpp/lib \\ # log4cpp 라이브러리 경로\t--with-pythia6-lib=/root/pythia6 \\ # pythia6 라이브러리 경로\t--with-gfortran-lib=/lib/x86_64-linux-gnu \\ # gfortran 라이브러리 경로\t--disable-lhapdf5 \\\t--enable-lhapdf6 \\\t--enable-gfortran # lhapdf5 말고 lhapdf6 사용, gfortran 사용make -j N # N 은 장비의 스레드 수make install\nGENIE integrated commandmkdir /root/GENIE &amp;&amp; \\git clone https://github.com/GENIE-MC/Generator.git GENIE_Generator &amp;&amp; \\cd /root/GENIE_Generator &amp;&amp; \\git checkout R-3_04_02 &amp;&amp; \\echo -e &#x27;export GENIE=/root/GENIE_Generator\\nexport ROOTSYS=/root/root_install\\nexport LOG4CPP=/root/log4cpp\\nexport LHAPATH=/root/lhapdf\\nexport PYTHIA6=/root/pythia6\\nexport PYTHIA8=/root/pythia8\\nexport PATH=/lib:$PATH:$ROOTSYS/bin:$GENIE/bin\\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$LOG4CPP/lib:/lib:/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:$LHAPATH/lib:$PYTHIA6:$PYTHIA8/lib:$ROOTSYS/lib:$GENIE/lib&#x27; &gt;&gt; /root/.zshrc &amp;&amp; \\source /root/.zshrc &amp;&amp; \\./configure \\\t--prefix=/root/GENIE \\\t--with-lhapdf6-inc=/root/lhapdf/include \\\t--with-lhapdf6-lib=/root/lhapdf/lib \\\t--with-libxml2-inc=/usr/include/libxml2 \\\t--with-libxml2-lib=/lib/x86_64-linux-gnu \\\t--with-log4cpp-inc=/root/log4cpp/include \\\t--with-log4cpp-lib=/root/log4cpp/lib \\\t--with-pythia6-lib=/root/pythia6 \\\t--with-pythia8-lib=/root/pythia8/lib \\\t--with-gfortran-lib=/lib/x86_64-linux-gnu \\\t--disable-lhapdf5 \\\t--enable-lhapdf6 \\\t--disable-pythia6 \\\t--enable-pythia8 \\\t--enable-gfortran &amp;&amp; \\make -j 100 &amp;&amp; \\make install\ntestgevgen_hadron -n 10000 -p 211 -t 1000080160 -k 0.2 —seed 9839389\ntest 를 제외한 위 모든 과정을 한 번에 실행하는 코드cd /root &amp;&amp; \\mkdir /root/lhapdf &amp;&amp; \\wget https://lhapdf.hepforge.org/downloads/LHAPDF-6.5.4.tar.gz &amp;&amp; \\tar xvf LHAPDF-6.5.4.tar.gz &amp;&amp; \\cd /root/LHAPDF-6.5.4 &amp;&amp; \\./configure \\\t--prefix=/root/lhapdf \\\t--disable-python &amp;&amp; \\make -j 100 &amp;&amp; \\ # N = 100 인 경우make install &amp;&amp; \\cd /root &amp;&amp; \\rm -rf LHAPDF* &amp;&amp; \\mkdir /root/log4cpp &amp;&amp; \\mkdir /root/log4cpp_src &amp;&amp; \\cd /root &amp;&amp; \\wget &#x27;https://sourceforge.net/projects/log4cpp/files/log4cpp-1.1.x (new)/log4cpp-1.1/log4cpp-1.1.5rc1.tar.gz&#x27; &amp;&amp; \\tar -xvf log4cpp-1.1.5rc1.tar.gz -C /root/log4cpp_src --strip-components=2 &amp;&amp; \\cd log4cpp_src &amp;&amp; \\./configure --prefix=/root/log4cpp &amp;&amp; \\make -j 100 &amp;&amp; \\make install &amp;&amp; \\cd /root &amp;&amp; \\rm -rf log4cpp_* log4cpp-* &amp;&amp; \\wget https://root.cern.ch/download/pythia6.tar.gz &amp;&amp; \\tar zxvf pythia6.tar.gz &amp;&amp; \\wget https://www.pythia.org/download/pythia6/pythia6428.f &amp;&amp; \\mv pythia6428.f pythia6/pythia6428.f &amp;&amp; \\rm pythia6/pythia6416.f &amp;&amp; \\cd /root/pythia6 &amp;&amp; \\sed -i &#x27;52,60s/^/extern /;62s/^/extern /;64,65s/^/extern /;69s/^/extern /;72s/^/extern /&#x27; /root/pythia6/pythia6_common_address.c &amp;&amp; \\./makePythia6.linuxx8664 -j 100 &amp;&amp; \\cd /root &amp;&amp; \\rm pythia6.tar.gz &amp;&amp; \\wget https://www.pythia.org/download/pythia83/pythia8312.tgz &amp;&amp; \\mkdir /root/pythia8 &amp;&amp; \\tar xvf pythia8312.tgz &amp;&amp; \\cd /root/pythia8312 &amp;&amp; \\./configure --prefix=/root/pythia8 &amp;&amp; \\make -j 100 &amp;&amp; \\make install &amp;&amp; \\cd /root &amp;&amp; \\rm -rf pythia8312* &amp;&amp; \\mkdir /root/gsl &amp;&amp; \\wget https://mirror.ibcp.fr/pub/gnu/gsl/gsl-latest.tar.gz &amp;&amp; \\tar xvf gsl-latest.tar.gz &amp;&amp; \\cd /root/gsl-2.8 &amp;&amp; \\./configure --prefix=/root/gsl &amp;&amp; \\make -j 100 &amp;&amp; \\make install &amp;&amp; \\cd /root &amp;&amp; \\rm -rf gsl-2.8 gsl-latest.tar.gz &amp;&amp; \\cd /root &amp;&amp; \\mkdir root_build &amp;&amp; \\mkdir root_install &amp;&amp; \\git clone https://github.com/root-project/root.git root_src &amp;&amp; \\cd /root/root_src &amp;&amp; \\git checkout v6-30-08 &amp;&amp; \\cd /root/root_build &amp;&amp; \\cmake \\\t-DCMAKE_INSTALL_PREFIX=/root/root_install \\\t-DPYTHIA6_LIBRARY=/root/pythia6/libPythia6.so \\\t-DPYTHIA8_INCLUDE_DIR=/root/pythia8/include \\\t-DPYTHIA8_LIBRARY=/root/pythia8/lib/libpythia8.so \\\t-DGSL_DIR=/usr/local \\\t-Dbuiltin_xrootd=ON \\\t-Droofit=ON \\\t-Dpythia6=ON \\\t-Dpythia8=ON \\\t-Dmathmore=ON \\\t-Dpython=OFF \\\t../root_src &amp;&amp; \\cmake --build . --target install -- -j 100 &amp;&amp; \\cd /root/root_install/bin &amp;&amp; \\source thisroot.sh &amp;&amp; \\cd /root &amp;&amp; \\mkdir /root/GENIE &amp;&amp; \\git clone https://github.com/GENIE-MC/Generator.git GENIE_Generator &amp;&amp; \\cd /root/GENIE_Generator &amp;&amp; \\git checkout R-3_04_02 &amp;&amp; \\echo -e &#x27;export GENIE=/root/GENIE_Generator\\nexport ROOTSYS=/root/root_install\\nexport LOG4CPP=/root/log4cpp\\nexport LHAPATH=/root/lhapdf\\nexport PYTHIA6=/root/pythia6\\nexport PATH=/lib:$PATH:$ROOTSYS/bin:$GENIE/bin\\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$LOG4CPP/lib:/lib:/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:$LHAPATH/lib:$PYTHIA6:$ROOTSYS/lib:$GENIE/lib&#x27; &gt;&gt; /root/.zshrc &amp;&amp; \\source /root/.zshrc &amp;&amp; \\./configure \\\t--prefix=/root/GENIE \\\t--with-lhapdf6-inc=/root/lhapdf/include \\\t--with-lhapdf6-lib=/root/lhapdf/lib \\\t--with-libxml2-inc=/usr/include/libxml2 \\\t--with-libxml2-lib=/lib/x86_64-linux-gnu \\\t--with-log4cpp-inc=/root/log4cpp/include \\\t--with-log4cpp-lib=/root/log4cpp/lib \\\t--with-pythia6-lib=/root/pythia6 \\\t--with-gfortran-lib=/lib/x86_64-linux-gnu \\\t--disable-lhapdf5 \\\t--enable-lhapdf6 \\\t--enable-gfortran &amp;&amp; \\make -j 100 &amp;&amp; \\make install &amp;&amp; \\echo &#x27;INSTALL COMPELETE&#x27;\n","categories":["Research"]},{"title":"밀크티 레시피","url":"/2024/07/04/%EB%B0%80%ED%81%AC%ED%8B%B0%20%EB%A0%88%EC%8B%9C%ED%94%BC/","content":"No. 1\n우유 140 ml, 전자렌지에 1 분 가열\n홍차 105 ml, Starbucks Teavana English Breakfast 티백 하나 (3.4 g)\n설탕 1 큰술  \\pm  0.5 큰술 (질량으로 수정 예정.)\n우유 맛이 좀 더 우세, 설탕은 적당\n\nNo. 4\n우유 150  ml, 밀크팬에 약불로 2 분 (온도계로 쟀을 때 65~70 °C 정도가 되면 된다)\n홍차 150 ml, Ronnefeldt Assam 티백 둘 (3.0 g), 100 °C 5 분\n설탕 2 큰술\n좋은 밸런스의 맛\n\n그 외\n홍차 잎이나 우유의 종류에 따라 취향에 맞는 레시피가 다 다를 수 있다.\n보통은 홍차를 평소에 음용할 때 사용하는 잎 질량의 두 배를 사용해서 우린 뒤 우유 : 홍차 = 1 : 1 (부피) 의 비율에서 시작해서 맛을 보면서 레시피를 찾아가면 편하다.\n\n","categories":["Recipe","milk tea"]},{"title":"영장 카나리아 (Warrant Canary)","url":"/2024/09/04/%EC%98%81%EC%9E%A5%20%EC%B9%B4%EB%82%98%EB%A6%AC%EC%95%84%20(Warrant%20Canary)/","content":"작성중\n","categories":["잡담"],"tags":["security"]},{"title":"체르노빌 원전 사고 직전 원자로 제어 컴퓨터 SKALA 기록","url":"/2024/07/24/%EC%B2%B4%EB%A5%B4%EB%85%B8%EB%B9%8C%20%EC%9B%90%EC%A0%84%20%EC%82%AC%EA%B3%A0%20%EC%A7%81%EC%A0%84%20%EC%9B%90%EC%9E%90%EB%A1%9C%20%EC%A0%9C%EC%96%B4%20%EC%BB%B4%ED%93%A8%ED%84%B0%20SKALA%20%EA%B8%B0%EB%A1%9D/","content":"","categories":["잡담"],"tags":["subtitle_works"]},{"title":"추가 예정 기능","url":"/2024/07/04/%EC%B6%94%EA%B0%80%20%EC%98%88%EC%A0%95%20%EA%B8%B0%EB%8A%A5/","content":"- 댓글 기능 : disqus 로 구현 예정 &lt;&lt; 추가 완료\n- 테마 손보기\n- 기타 미세조정\n- 다른 카테고리, 메뉴 만들기\n- 글 옆에 코멘트 개수 표시??\n\n방문자 통계 &lt;&lt; 추가 완료\n\n","categories":["Announcement"]}]